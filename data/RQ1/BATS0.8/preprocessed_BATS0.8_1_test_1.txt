[{"A_title": "MathUtils.gcd(Integer.MIN_VALUE 0) should throw an Exception instead of returning Integer.MIN_VALUEThe gcd method should throw an Exception for gcd(Integer.MIN_VALUE 0) like for gcd(Integer.MIN_VALUE Integer.MIN_VALUE). The method should only return nonnegative results.", "A_clean_title": ["mathutil", "gcd", "math", "util", "integ", "min", "valu", "throw", "except", "instead", "return", "integ", "min", "valueth", "valu", "gcd", "method", "throw", "except", "gcd", "integ", "min", "valu", "like", "gcd", "integ", "min", "valu", "integ", "min", "valu", "method", "onli", "return", "nonneg", "result"], "B_title": "Fix divide by zero error in MathUtils. Add a throw if it wasn  t possible to do this .. ", "B_clean_title": ["fix", "divid", "by", "zero", "error", "mathutil", "math", "util", "add", "throw", "it", "wasn", "possibl", "thi"]},
{"A_title": "MathUtils.gcd(Integer.MIN_VALUE 0) should throw an Exception instead of returning Integer.MIN_VALUEThe gcd method should throw an Exception for gcd(Integer.MIN_VALUE 0) like for gcd(Integer.MIN_VALUE Integer.MIN_VALUE). The method should only return nonnegative results.", "A_clean_title": ["mathutil", "gcd", "math", "util", "integ", "min", "valu", "throw", "except", "instead", "return", "integ", "min", "valueth", "valu", "gcd", "method", "throw", "except", "gcd", "integ", "min", "valu", "like", "gcd", "integ", "min", "valu", "integ", "min", "valu", "method", "onli", "return", "nonneg", "result"], "B_title": "Fixed an error in computing gcd and lcm for some extreme values at integer range boundaries. JIRA: MATH-243", "B_clean_title": ["fix", "error", "comput", "gcd", "lcm", "some", "extrem", "valu", "at", "integ", "rang", "boundari", "jira", "math", "243"]}]