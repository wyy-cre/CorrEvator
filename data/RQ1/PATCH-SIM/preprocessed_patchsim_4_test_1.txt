[{"A_title": "StrBuilder contains usages of thisBuf.length when they should use sizeWhile fixing LANG-294 I noticed that there are two other places in StrBuilder that reference thisBuf.length and unless Im mistaken they shouldnt.", "A_clean_title": ["strbuilder", "str", "builder", "contain", "usag", "thisbuf", "length", "thi", "buf", "when", "they", "use", "sizewhil", "size", "while", "fix", "lang", "294", "notic", "that", "there", "are", "two", "other", "place", "strbuilder", "str", "builder", "that", "refer", "thisbuf", "length", "thi", "buf", "unless", "im", "mistaken", "they", "shouldnt"], "B_title": "added missing patch. updated hercules bugfix. ", "B_clean_title": ["ad", "miss", "patch", "updat", "hercul", "bugfix"]},
{"A_title": "StrBuilder contains usages of thisBuf.length when they should use sizeWhile fixing LANG-294 I noticed that there are two other places in StrBuilder that reference thisBuf.length and unless Im mistaken they shouldnt.", "A_clean_title": ["strbuilder", "str", "builder", "contain", "usag", "thisbuf", "length", "thi", "buf", "when", "they", "use", "sizewhil", "size", "while", "fix", "lang", "294", "notic", "that", "there", "are", "two", "other", "place", "strbuilder", "str", "builder", "that", "refer", "thisbuf", "length", "thi", "buf", "unless", "im", "mistaken", "they", "shouldnt"], "B_title": "StrBuilder . contains ( ) now uses the same level of storage as ArrayList .. ", "B_clean_title": ["strbuilder", "str", "builder", "contain", "now", "use", "same", "level", "storag", "as", "arraylist", "array", "list"]},
{"A_title": "Error on TimeSeries createCopy() methodThe test case at the end fails with :  java.lang.IllegalArgumentException: Requires start <= end.  The problem is in that the int start and end indexes corresponding to given timePeriod are computed incorectly. Here I would expect an empty serie to be returned not an exception. This is with jfreechart 1.0.7", "A_clean_title": ["error", "timeseri", "time", "seri", "createcopi", "creat", "copi", "methodth", "method", "test", "case", "at", "end", "fail", "java", "lang", "illegalargumentexcept", "illeg", "argument", "except", "requir", "start", "end", "problem", "that", "int", "start", "end", "index", "correspond", "given", "timeperiod", "time", "period", "are", "comput", "incorectli", "here", "would", "expect", "empti", "seri", "return", "not", "except", "thi", "jfreechart"], "B_title": "Fix an issue with TimeSeries . isEmpty ( ) .. ", "B_clean_title": ["fix", "issu", "timeseri", "time", "seri", "isempti", "empti"]},
{"A_title": "One of Variance.evaluate() methods does not work correctlyThe method org.apache.commons.math.stat.descriptive.moment.Variance.evaluate(double values double weights double mean int begin int length) does not work properly. Looks loke it ignores the length parameter and grabs the whole dataset. Similar method in Mean class seems to work. I did not check other methods taking the part of the array; they may have the same problem. Workaround: I had to shrink my arrays and use the method without the length.", "A_clean_title": ["one", "varianc", "evalu", "method", "not", "work", "correctlyth", "correctli", "method", "org", "apach", "common", "math", "stat", "descript", "moment", "varianc", "evalu", "doubl", "valu", "doubl", "weight", "doubl", "mean", "int", "begin", "int", "length", "not", "work", "properli", "look", "loke", "it", "ignor", "length", "paramet", "grab", "whole", "dataset", "similar", "method", "mean", "class", "seem", "work", "did", "not", "check", "other", "method", "take", "part", "array", "they", "may", "have", "same", "problem", "workaround", "had", "shrink", "my", "array", "use", "method", "without", "length"], "B_title": "Added missing range in Variance copy constructor. ", "B_clean_title": ["ad", "miss", "rang", "varianc", "copi", "constructor"]}]